{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/add/add.component.ts","webpack:///src/app/components/list/list.component.ts","webpack:///src/app/directives/background-color.directive.ts","webpack:///src/app/models/pet.model.ts","webpack:///src/app/pipes/too-long.pipe.ts","webpack:///src/app/services/pet.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","styles","AppModule","declarations","imports","providers","bootstrap","AddComponent","petService","showForm","name","required","minLength","type","min","max","description","maxLength","showPet","getRawValue","addPet","onAdd","ListComponent","PetService","subscription$","pets","push","_pets$","subscribe","sub","forEach","unsubscribe","BackgroundColorDirective","backgroundColor","petType","DOG","PetType","TooLongPipe","value","length","slice","CAT","pet","getValue","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,Y;;;;;uBAAAA,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;AALrB;;AACA;;;;;;;;;sEAISA,Y,EAAY;cARxB,uDAQwB;eARd;AACTC,kBAAQ,EAAE,UADD;AAETC,kBAAQ,4DAFC;AAMTC,gBAAM,EAAE;AANC,S;AAQc,Q;;;;;;;;;;;;;;;;;;ACVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA0BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAJJ,CACP,uEADO,EAEP,kEAFO,CAII;;;;0HAGFA,S,EAAS;AAAA,uBAblB,2DAakB,EAZlB,6EAYkB,EAXlB,+FAWkB,EAVlB,0EAUkB,EATlB,gEASkB;AATP,kBAGX,uEAHW,EAIX,kEAJW;AASO,O;AALC,K;;;;;sEAKVA,S,EAAS;cAfrB,sDAeqB;eAfZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,+FAHY,EAIZ,0EAJY,EAKZ,gEALY,CADN;AAQRC,iBAAO,EAAE,CACP,uEADO,EAEP,kEAFO,CARD;AAYRC,mBAAS,EAAE,EAZH;AAaRC,mBAAS,EAAE,CAAC,2DAAD;AAbH,S;AAeY,Q;;;;;;;;;;;;;;;;;;ACzBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaC,Y;AAIX,4BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAA2B;;;;mCAEvC;AACN,eAAKC,QAAL,GAAgB,IAAI,wDAAJ,CAAc;AAC5BC,gBAAI,EAAE,IAAI,wDAAJ,CAAc,IAAd,EAAoB,CAAC,0DAAWC,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,CAApB,CADsB;AAE5BC,gBAAI,EAAE,IAAI,wDAAJ,CAAc,IAAd,EAAoB,CAAC,0DAAWF,QAAZ,EAAsB,0DAAWG,GAAX,CAAe,CAAf,CAAtB,EAAyC,0DAAWC,GAAX,CAAe,CAAf,CAAzC,CAApB,CAFsB;AAG5BC,uBAAW,EAAE,IAAI,wDAAJ,CAAc,IAAd,EAAoB,CAAC,0DAAWL,QAAZ,EAAsB,0DAAWC,SAAX,CAAqB,CAArB,CAAtB,EAA+C,0DAAWK,SAAX,CAAqB,GAArB,CAA/C,CAApB;AAHe,WAAd,CAAhB;AAKD;;;gCAEO;AACN,cAAMC,OAAO,GAAQ;AACnBR,gBAAI,EAAE,KAAKD,QAAL,CAAcU,WAAd,GAA4BT,IADf;AAEnBG,gBAAI,EAAE,KAAKJ,QAAL,CAAcU,WAAd,GAA4BN,IAFf;AAGnBG,uBAAW,EAAE,KAAKP,QAAL,CAAcU,WAAd,GAA4BH;AAHtB,WAArB;AAKA,eAAKR,UAAL,CAAgBY,MAAhB,CAAuBF,OAAvB;AACD;;;;;;;uBArBUX,Y,EAAY,iI;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,e;AAAA,a;AAAA,4R;AAAA;AAAA;AATzB;;AACI;;AAAmB;;AAA0C;;AAAI;;AACjE;;AAAmB;;AAA4D;;AAAI;;AACnF;;AAA0B;;AAAiD;;AAAW;;AAC1F;;AACA;;AAAsC;AAAA,mBAAS,IAAAc,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAO;;;;AALzD;;AAKE;;AAAA;;;;;;;;;sEAIKd,Y,EAAY;cAZxB,uDAYwB;eAZd;AACTR,kBAAQ,EAAE,SADD;AAETC,kBAAQ,0aAFC;AAUTC,gBAAM,EAAE;AAVC,S;AAYc,Q;;;;;;;;;;;;;;;;;;;;;;ACfzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAOA;;AACI;;AAA2C;;AAAc;;AAAK;;AAAG;;AAAc;;AAC/E;;AAAG;;;;AAA+B;;AACtC;;;;;;AAF0B;;AAAA;;AAAqB;;AAAA;;AAAsB;;AAAA;;AAC9D;;AAAA;;;;QAMMqB,a;AAKX,6BAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AAHpB,aAAAC,aAAA,GAAgC,EAAhC;AACA,aAAAC,IAAA,GAAc,EAAd;AAE+C;;;;mCAEvC;AAAA;;AACN,eAAKD,aAAL,CAAmBE,IAAnB,CAAwB,KAAKH,UAAL,CAAgBI,MAAhB,CAAuBC,SAAvB,CAAkC,UAAAC,GAAG,EAAI;AAC/D,mBAAO,KAAI,CAACJ,IAAL,GAAYI,GAAnB;AACD,WAFuB,CAAxB;AAGD;;;sCAEU;AACT,eAAKL,aAAL,CAAmBM,OAAnB,CAA4B,UAAAD,GAAG;AAAA,mBAAIA,GAAG,CAACE,WAAJ,EAAJ;AAAA,WAA/B;AACD;;;;;;;uBAfUT,a,EAAa,iI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,iF;AAAA;AAAA;AAR1B;;;;AAAc;;;;;;;;;;sEAQDA,a,EAAa;cAXzB,uDAWyB;eAXf;AACTvB,kBAAQ,EAAE,UADD;AAETC,kBAAQ,6MAFC;AASTC,gBAAM,EAAE;AATC,S;AAWe,Q;;;;;;;;;;;;;;;;;;;;;;ACjB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMa+B,wB;AAUX,0CAAc;AAAA;;AAN0B,aAAAC,eAAA,GAAkB,aAAlB;AAMvB;;;;iCAJ4B;AAC3C,eAAKC,OAAL,KAAiB,0DAAQC,GAAzB,GAA+B,KAAKF,eAAL,GAAuB,MAAtD,GAA+D,KAAKA,eAAL,GAAuB,KAAtF;AACD;;;;;;;uBARUD,wB;AAAwB,K;;;YAAxBA,wB;AAAwB,iD;AAAA,iB;AAAA;AAAA;;mBAAxB,Y;AAAQ,W;;;;;;;;;;;;;;sEAARA,wB,EAAwB;cAHpC,uDAGoC;eAH1B;AACTjC,kBAAQ,EAAE;AADD,S;AAG0B,Q;;;;gBAElC;;;gBAEA,yD;iBAAY,kB;;;gBAEZ,0D;iBAAa,a;;;;;;;;;;;;;;;;;;;;ACNhB;AAAA;;;AAAA;AAAA;AAAA;;AAAA,QAAYqC,OAAZ;;AAAA,eAAYA,OAAZ,EAAmB;AACjB;AACA;AACD,KAHD,EAAYA,OAAO,KAAPA,OAAO,MAAnB;;;;;;;;;;;;;;;;;ACNA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaC,W;;;;;;;kCAEDC,K,EAAiC;AACzC,cAAIA,KAAK,CAACC,MAAN,GAAe,EAAnB,EAAuB;AACrB,mBAAQD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAe,EAAf,IAAqB,KAA7B;AACD;AACF;;;;;;;uBANUH,W;AAAW,K;;;;YAAXA,W;AAAW;;;;;sEAAXA,W,EAAW;cAHvB,kDAGuB;eAHlB;AACJ3B,cAAI,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;ACLxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaa,U;AADb;AAAA;;AAES,aAAAI,MAAA,GAAiC,IAAI,oDAAJ,CAA2B,CACjE;AACEjB,cAAI,EAAE,MADR;AAEEG,cAAI,EAAE,0DAAQsB,GAFhB;AAGEnB,qBAAW,EAAE,+EACX;AAJJ,SADiE,EAOjE;AACEN,cAAI,EAAE,OADR;AAEEG,cAAI,EAAE,0DAAQsB,GAFhB;AAGEnB,qBAAW,EAAE,+EACX;AAJJ,SAPiE,EAajE;AACEN,cAAI,EAAE,MADR;AAEEG,cAAI,EAAE,0DAAQsB,GAFhB;AAGEnB,qBAAW,EAAE,+EACX;AAJJ,SAbiE,EAmBjE;AACEN,cAAI,EAAE,QADR;AAEEG,cAAI,EAAE,0DAAQsB,GAFhB;AAGEnB,qBAAW,EAAE,+EACX;AAJJ,SAnBiE,EAyBjE;AACEN,cAAI,EAAE,OADR;AAEEG,cAAI,EAAE,0DAAQsB,GAFhB;AAGEnB,qBAAW,EAAE,+EACX;AAJJ,SAzBiE,EA+BjE;AACEN,cAAI,EAAE,SADR;AAEEG,cAAI,EAAE,0DAAQ4B,GAFhB;AAGEzB,qBAAW,EAAE,+EACX;AAJJ,SA/BiE,EAqCjE;AACEN,cAAI,EAAE,SADR;AAEEG,cAAI,EAAE,0DAAQ4B,GAFhB;AAGEzB,qBAAW,EAAE,+EACX;AAJJ,SArCiE,EA2CjE;AACEN,cAAI,EAAE,SADR;AAEEG,cAAI,EAAE,0DAAQ4B,GAFhB;AAGEzB,qBAAW,EAAE,+EACX;AAJJ,SA3CiE,EAiDjE;AACEN,cAAI,EAAE,SADR;AAEEG,cAAI,EAAE,0DAAQ4B,GAFhB;AAGEzB,qBAAW,EAAE,+EACX;AAJJ,SAjDiE,EAuDjE;AACEN,cAAI,EAAE,SADR;AAEEG,cAAI,EAAE,0DAAQ4B,GAFhB;AAGEzB,qBAAW,EAAE,+EACX;AAJJ,SAvDiE,CAA3B,CAAjC;AAmER;;;;+BAJQ0B,G,EAAU;AACf,cAAMjB,IAAI,GAAG,KAAKE,MAAL,CAAYgB,QAAZ,EAAb;;AACAlB,cAAI,CAACC,IAAL,CAAUgB,GAAV;AACD;;;;;;;uBAnEUnB,U;AAAU,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBADE;;;;;sEACZA,U,EAAU;cADtB,wDACsB;eADX;AAACqB,oBAAU,EAAE;AAAb,S;AACW,Q;;;;;;;;;;;;;;;;;;ACLvB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <app-list></app-list>\n    <app-add></app-add>\n  `,\n  styles: [``]\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './components/list/list.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BackgroundColorDirective } from './directives/background-color.directive';\nimport { AddComponent } from './components/add/add.component';\nimport { TooLongPipe } from './pipes/too-long.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    BackgroundColorDirective,\n    AddComponent,\n    TooLongPipe\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { PetService } from '../../services/pet.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators } from '@angular/forms';\nimport { Pet } from 'src/app/models/pet.model';\n\n@Component({\n  selector: 'app-add',\n  template: `\n<form [formGroup]=\"showForm\">\n    <label for=\"name\" ><input type=\"text\" formControlName=\"name\">name</label>\n    <label for=\"type\" ><input type=\"number\" min=\"1\" max=\"2\" formControlName=\"type\">tpye</label>\n    <label for=\"description\" ><input type=\"text\" formControlName=\"description\">description</label>\n</form>\n<button [disabled]=\"showForm.invalid\" (click)=\"onAdd()\">Add pet</button>\n  `,\n  styles: [``]\n})\nexport class AddComponent implements OnInit {\n\n  showForm: FormGroup;\n\n  constructor(private petService: PetService) { }\n\n  ngOnInit(): void {\n    this.showForm = new FormGroup({\n      name: new FormGroup(null, [Validators.required, Validators.minLength(2)]),\n      type: new FormGroup(null, [Validators.required, Validators.min(1), Validators.max(2)]),\n      description: new FormGroup(null, [Validators.required, Validators.minLength(1), Validators.maxLength(200)])\n    });\n  }\n\n  onAdd() {\n    const showPet: Pet = {\n      name: this.showForm.getRawValue().name,\n      type: this.showForm.getRawValue().type,\n      description: this.showForm.getRawValue().description,\n    };\n    this.petService.addPet(showPet);\n  }\n\n\n}\n","import { TooLongPipe } from './../../pipes/too-long.pipe';\nimport { PetService } from './../../services/pet.service';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Pet } from 'src/app/models/pet.model';\n\n@Component({\n  selector: 'app-list',\n  template: `\n<ng-container *ngFor=\"let pet of pets\">\n    <p appBackgroundColor [petType]=\"pet.type\">{{ pet.name }}</p> <p>{{ pet.type }}</p>\n    <p>{{ pet.description | tooLong }}</p>\n</ng-container>\n\n  `,\n  styles: [``]\n})\nexport class ListComponent implements OnInit, OnDestroy {\n\n  subscription$: Subscription[] = [];\n  pets: Pet[] = [];\n\n  constructor(private PetService: PetService) { }\n\n  ngOnInit(): void {\n    this.subscription$.push(this.PetService._pets$.subscribe( sub => {\n      return this.pets = sub;\n    }))\n  }\n\n  ngOnDestroy(): void {\n    this.subscription$.forEach( sub => sub.unsubscribe());\n  }\n\n}\n","import { PetType } from './../models/pet.model';\nimport { Directive, Input, HostBinding, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[appBackgroundColor]'\n})\nexport class BackgroundColorDirective {\n\n  @Input() petType: PetType;\n\n  @HostBinding('style.background') public backgroundColor = 'transparent';\n\n  @HostListener('mouseeneter') public mouseE() {\n    this.petType === PetType.DOG ? this.backgroundColor = 'blue' : this.backgroundColor = 'red';\n  }\n\n  constructor() { }\n\n}\n","export interface Pet {\n  name: string;\n  type: PetType;\n  description: string;\n}\n\nexport enum PetType {\n  DOG = 1,\n  CAT\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'tooLong'\n})\nexport class TooLongPipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): unknown {\n    if (value.length > 20) {\n      return (value.slice(1, 20) + '...');\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Pet, PetType } from '../models/pet.model';\n\n@Injectable({providedIn: 'root'})\nexport class PetService {\n  public _pets$: BehaviorSubject<Pet[]> = new BehaviorSubject<Pet[]>([\n    {\n      name: \"Rexi\",\n      type: PetType.DOG,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Buksi\",\n      type: PetType.DOG,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Samu\",\n      type: PetType.DOG,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Pajkos\",\n      type: PetType.DOG,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Félix\",\n      type: PetType.DOG,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Loncsos\",\n      type: PetType.CAT,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Moncsos\",\n      type: PetType.CAT,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Mancsos\",\n      type: PetType.CAT,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Koncsos\",\n      type: PetType.CAT,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n    {\n      name: \"Pontyos\",\n      type: PetType.CAT,\n      description: \"Etiam in congue metus. In at pulvinar nulla, sollicitudin vulputate elit. \" +\n        \"Mauris posuere sit amet ex nec gravida.\"\n    },\n  ]);\n\n  addPet(pet: Pet) {\n    const pets = this._pets$.getValue();\n    pets.push(pet);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}